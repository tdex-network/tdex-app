fastlane_version '2.102.0'

# iOS Lanes üçè
platform :ios do
  desc 'Fetch certificates and provisioning profiles'
  lane :certificates do
    match(app_identifier: 'io.sevenlabs.app', type: 'development', readonly: true)
    match(app_identifier: 'io.sevenlabs.app', type: 'appstore', readonly: true)
  end

  desc 'Build the iOS application.'
  lane :build do
    gym(
      scheme: 'App',
      workspace: "./ios/App/App.xcworkspace",
      include_bitcode: false,
    )
  end

  desc 'Ship to Testflight.'
  lane :beta do
    git_check
    increment_build_number(
      xcodeproj: './ios/App/App.xcodeproj'
    )
    certificates
    build
    changes = changelog_from_git_commits
    pilot(
      app_identifier: 'io.sevenlabs.app',
      team_id: '122448679',
      team_name: 'Seven Labs Limited',
      changelog: changes
    )
  end

  desc 'Ship to AppStore.'
  lane :prod do
    git_check
    certificates
    build
    changes = changelog_from_git_commits
    deliver(
      submit_for_review: true,
      automatic_release: true,
      force: true,
      skip_metadata: true,
      skip_screenshots: true,
      submission_information: { add_id_info_uses_idfa: false },
    )
  end
end


# Android Lanes ü§ñ
platform :android do
  desc 'Build the Android application apk.'
  lane :apk do
    gradle(task: 'clean', project_dir: 'android/')
    gradle(task: 'app:assemble', build_type: 'Debug', project_dir: 'android/')
    gradle(task: 'app:assemble', build_type: 'Release', project_dir: 'android/')
  end


  desc 'Ship to PlayStore.'
  lane :prod do
    git_check
    apk
    supply(
      track: 'production',
    )
  end
end

## Bump
desc 'Android: Increment versionCode and set versionName to package.json version.'
package = load_json(json_path: "./package.json")

private_lane :inc_ver_and do
  increment_version_code(
    gradle_file_path: "./android/app/build.gradle",
  )
  increment_version_name(
    gradle_file_path: "./android/app/build.gradle",
    version_name: package['version']
  )
end


desc 'iOS: Increment build number and set the version to package.json version.'
private_lane :inc_ver_ios do
package = load_json(json_path: "./package.json")
  increment_build_number(
    xcodeproj: './ios/App/App.xcodeproj'
  )
  increment_version_number(
    xcodeproj: './ios/App/App.xcodeproj',
    version_number: package['version']
  )
end


desc 'Bump build numbers, and set the version to match the pacakage.json version.'
lane :bump do
  inc_ver_ios
  inc_ver_and
end

desc 'Various checks for git branch'
lane :git_check do
  ensure_git_branch
  ensure_git_status_clean
  git_pull
end
