on:
  push:
    tags:
      - "v*"

name: Release

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  testflight:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2

      - name: Bundle Install
        run: bundle install

      # Build Ionic App
      - name: install node dependencies
        run: yarn install --frozen-lockfile

      # get current  tag
      - name: tag
        id: next_tag
        run: echo ::set-output name=tag::${GITHUB_REF#refs/tags/}

      # get version number without the "v" for package.json increment
      - name: version
        id: next_version
        run: |
          tag=${{ steps.next_tag.outputs.tag }}
          echo ::set-output name=version::${tag:1}

      - name: Replace credentials
        run: |
          plutil -replace CFBundleShortVersionString -string "${{ steps.next_version.outputs.version }}" ./ios/App/App/Info.plist

      - name: build ionic ios
        run: yarn build:ios

      - name: Fastlane Beta CI
        run: bundle exec fastlane ios beta_ci
        env:
          MATCH_PASSWORD: ${{ secrets.KEYSTORE_PASSPHRASE }}
          FASTLANE_USER: marco@sevenlabs.io
          FASTLANE_PASSWORD: ${{ secrets.APPSTORE_PASSWORD }}
          FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: ${{secrets.APPLE_APP_PASSWORD}}

  # This workflow contains a single job called "build"
  apk:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    #needs: testflight
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # setup nodejs
      - uses: actions/setup-node@v2
        with:
          node-version: "16"

      - name: set up Java 17
        uses: actions/setup-java@v2
        with:
          distribution: "zulu"
          java-version: 17

      # Build Ionic App
      - run: yarn install --frozen-lockfile

      - name: build ionic android
        run: yarn build:android
        env:
          CI: false

      # Build Android APK with Gradle
      - name: Build Debug APK
        run: |
          cd android
          chmod +x ./gradlew
          ./gradlew assemble
          cd ..

      # get current  tag
      - name: tag
        id: next_tag
        run: echo ::set-output name=tag::${GITHUB_REF#refs/tags/}

      # get version number without the "v" for package.json increment
      - name: version
        id: next_version
        run: |
          tag=${{ steps.next_tag.outputs.tag }}
          echo ::set-output name=version::${tag:1}

      - name: Increment package.json version
        run: |
          jq '.version = "${{ steps.next_version.outputs.version }}"' package.json  > package.tmp.json
          mv package.tmp.json package.json

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            ./android/app/build/outputs/apk/debug/app-debug.apk
            ./android/app/build/outputs/apk/release/app-release-unsigned.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Commit manifest and package.json to master
      - name: Commit & Push
        run: |
          git config --local user.email "$(git log --format='%ae' HEAD^!)"
          git config --local user.name "$(git log --format='%an' HEAD^!)"
          git add .
          git commit -m "${{ steps.next_tag.outputs.tag }}"
          git push origin HEAD:master
